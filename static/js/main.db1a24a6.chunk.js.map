{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","props","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","findUserById","userId","usersFromServer","find","preparedTodos","currentUser","App","useState","todosList","setTodoList","setTitle","selectedUser","setSelectedUser","isTitleError","setIsTitleError","hasSelectedError","setHasSelectedError","onSubmit","event","preventDefault","trim","newTodo","Math","max","Number","currentTodos","type","placeholder","value","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db1a24a6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { FC } from 'react';\nimport { User } from '../../types/app.typedefs';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: FC<Props> = (props) => {\n  const { user } = props;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { PreparedTodo } from '../../types/app.typedefs';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: PreparedTodo,\n}\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    id,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { PreparedTodo } from '../../types/app.typedefs';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: PreparedTodo[];\n}\n\nexport const TodoList: FC<Props> = (props) => {\n  const { todos } = props;\n\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { PreparedTodo, User } from './types/app.typedefs';\nimport { TodoList } from './components/TodoList';\n\nconst findUserById = (userId: number): User | null => (\n  usersFromServer.find(user => user.id === userId) || null\n);\n\nconst preparedTodos: PreparedTodo[] = todosFromServer.map(todo => {\n  const currentUser = findUserById(todo.userId);\n\n  return {\n    ...todo,\n    user: currentUser,\n  };\n});\n\nconst getTodoId = (todos: PreparedTodo[]) => {\n  const newId = Math.max(...todos.map(todo => todo.id));\n\n  return newId + 1;\n};\n\nexport const App = () => {\n  const [todosList, setTodoList] = useState<PreparedTodo[]>(preparedTodos);\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState('');\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [hasSelectedError, setHasSelectedError] = useState(false);\n\n  const resetForm = () => {\n    setTitle('');\n    setSelectedUser('');\n    setHasSelectedError(false);\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n\n    if (isTitleError) {\n      setIsTitleError(false);\n    }\n  };\n\n  const onSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!title.trim()) {\n      setIsTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setHasSelectedError(true);\n    }\n\n    if (!title.trim() || !selectedUser) {\n      return;\n    }\n\n    const newTodo: PreparedTodo = {\n      id: getTodoId(todosList),\n      title,\n      completed: false,\n      userId: Number(selectedUser),\n      user: findUserById(Number(selectedUser)),\n    };\n\n    setTodoList(currentTodos => [...currentTodos, newTodo]);\n\n    resetForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form onSubmit={onSubmit}>\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"there should be a title here\"\n            value={title}\n            onChange={handleChange}\n          />\n          {isTitleError && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={(event) => setSelectedUser(event.target.value)}\n          >\n            <option value=\"0\">Choose a user</option>\n            {usersFromServer.map(user => {\n              const { id, name } = user;\n\n              return (\n                <option\n                  key={id}\n                  value={id}\n                >\n                  { name }\n                </option>\n              );\n            })}\n          </select>\n\n          {(!selectedUser && hasSelectedError) && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}